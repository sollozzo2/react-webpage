{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["counter","Button","styled","button","Message","props","className","usertext","options","afterComplete","complete","startDelay","jasontext","Game","state","chatval","Array","fill","chatstrings","buttonstate","fuck","buttonnum","buttonid","tempbuttonstate","this","slice","tempchatval","i","length","console","log","setState","document","getElementById","step","instance","handleClick","destroy","messages","push","yeet","id","onClick","disabled","React","Component","main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5cee207e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport TypeIt from \"typeit-react\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport ReactDOM from 'react-dom';\n\nvar counter = 0;\n\nconst Button = styled.button`\n  background-color: black;\n  color: white;\n  font-size: 20px;\n  padding: 10px 60px;\n  border-radius: 5px;\n  margin: 10px 0px;\n  cursor: pointer;\n  align-content: center;\n\n  &:disabled {\n    color: grey;\n    opacity: 0.7;\n    cursor: default;\n  }\n`;\n\nfunction Message(props) {\n  return (\n    <div className=\"chattext\">\n      <div className=\"chattext\" />\n        <span>\n          User: <br/>\n          {props.usertext} \n        </span>\n\n        <span>\n        <br/><br/>\n          Jason: <br/>\n          <TypeIt options={{afterComplete: props.complete, startDelay: 1000}}>\n            {props.jasontext}\n          </TypeIt> <br/>\n        </span>\n    </div>\n  );\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n                    chatval: Array(3).fill(null), \n                    chatstrings: [\n                      [\"What is your name?\", \"My name is Jason, like I said.\"],\n                      [\"What is your quest?\", \"My quest is to find the meaning of love in this chaotic world.\"],\n                      [\"What is your favourite colour?\", \"My favourite colour is green because I like trees.\"],\n                      [\"What is...\", \"I'd really like to stay here and chat but I have to get going. Meanwhile you can have a look around my page.\"]\n                    ],\n                    buttonstate: Array(3).fill(0),\n                    fuck: false,\n                 };\n  }\n\n  handleClick(buttonnum, buttonid) {\n    var tempbuttonstate = this.state.buttonstate.slice();\n    tempbuttonstate[buttonnum] = 1;\n\n    //document.getElementById(\"chatwindow\").scrollIntoView(false);\n    var tempchatval = this.state.chatval.slice();\n    for (var i = 0; i < tempchatval.length; i++) {\n      if (tempchatval[i] == null) {\n        console.log(\"updating\", i, buttonnum)\n        tempchatval[i] = buttonnum;\n        break;\n      }\n    }\n    this.setState({chatval: tempchatval, buttonstate: tempbuttonstate});\n\n    var objDiv = document.getElementById(\"chatwindow\");\n\n    console.log(\"clickhandleyeeeeeee\")\n    //objDiv.scrollTop = 9999;//objDiv.scrollHeight;\n    //objDiv.scrollIntoView({block: \"end\"});\n  }\n\n  yeet(step, instance) {\n    counter += 1;\n    if (counter == 3) {\n      this.handleClick(0, \"question0\");\n    }\n    console.log(\"counter\", counter)\n    instance.destroy();\n  }\n\n  render() {\n    console.log(\"render is activated\");\n    var messages = [];\n    for (var i = 0; i < this.state.chatval.length; i++) {\n      if (this.state.chatval[i] != null) {\n        messages.push(<Message complete={this.yeet} jasontext={this.state.chatstrings[this.state.chatval[i]][1]} usertext={this.state.chatstrings[this.state.chatval[i]][0]} />);\n        console.log(i, this.state.chatval[i], this.state.chatstrings[0][1]);\n      }\n      console.log(\"counter\", counter);\n      if (i >= 2 && this.state.chatval[i] != null && counter == 3) {\n        messages.push(<Message complete={this.yeet} jasontext={this.state.chatstrings[3][1]} usertext={this.state.chatstrings[3][0]} />)\n        console.log(messages);\n      }\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          \n        <a>About</a>\n        <a>Learn React</a>\n        <a>Gallery</a>\n        <a>Contact</a>\n        </header>\n\n        <div id=\"chatwindow\" className=\"main\">\n          <div className=\"chattext\">\n            Jason: <TypeIt>Hi, I'm Jason.</TypeIt><br />\n          </div>\n          <div>{messages}</div>\n        </div>\n\n        <div className=\"optionrow\">\n          <Button id=\"question0\" onClick={() => this.handleClick(0, \"question0\")} disabled={this.state.buttonstate[0]}>What is your name?</Button>\n          <Button id=\"question1\" onClick={() => this.handleClick(1, \"question1\")} disabled={this.state.buttonstate[1]}>What is your quest?</Button>\n          <Button id=\"question2\" onClick={() => this.handleClick(2, \"question2\")} disabled={this.state.buttonstate[2]}>What is your favorite colour?</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction main() {\n  //return <div>hi</div>;\n  return <Game />;\n  //ReactDOM.render(<Game />, document.getElementById(\"root\"));\n}\n\nexport default main;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}